<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///creation

global.tileSize = 32;

global.boardGrid = ds_grid_create(20,20);

global.tileList = ds_list_create();

fowSurface = surface_create(view_wview[view_current],view_hview[view_current]);



//add tile objects to the tiles-list
ds_list_add(global.tileList,obj_tile_dirt,obj_tile_grass);


//populate the grid with random tiles
for(i = 0; i &lt; ds_grid_width(global.boardGrid); i++)
{
    for(j = 0; j &lt; ds_grid_height(global.boardGrid); j++)
    {
        // instance_create(i*global.tileSize,j*global.tileSize,ds_list_find_value(global.tileList,irandom(ds_list_size(global.tileList))));
        instance_create(i*global.tileSize,j*global.tileSize,ds_list_find_value(global.tileList,irandom(ds_list_size(global.tileList) -1)));
    }
}


//put the player in the middle of the board

instance_create(ds_grid_width(global.boardGrid)/2*global.tileSize+16,ds_grid_height(global.boardGrid)/2*global.tileSize+16,obj_player);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*
/// fog of war

//fowSurface = surface_create(view_wview[view_current],view_hview[view_current]);

if(surface_exists(fowSurface))
{
    surface_set_target(fowSurface);
    draw_set_colour(c_black);
    draw_rectangle(0,0,view_wview[view_current],view_hview[view_current],false);
    
    draw_set_blend_mode(bm_subtract);
    draw_set_color(c_white);
    draw_rectangle(obj_player.x-32,obj_player.y-32,obj_player.x+64,obj_player.y+64,false);
    draw_set_blend_mode(bm_normal);
    
    surface_reset_target();
}
draw_surface(fowSurface,0,0);
*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
