<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_dialogbox</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Variables

// MAKE SURE scr_LoadDialogFromFile has been run before this script runs!

// variables that can be altered before showing dialog
dialogID = "";
textSpeed = 1.5; // value should be between 0.1(instant) - 3(slow)
font = fnt_coolskeleton;
color = c_white; // text color
textSound = -1; // sound to play for each character in the dialog.
                // Won't be used if typewriter is set to false
write = false; // set to true when all variables have been set
typewriter = true; // set to false if all text should be shown at once

// variables that updates themself
dialog = ""; // current dialog to be written
nextDialogID = ""; // dialogID for the next dialog to be written
dialogLength = 0; // length of current dialog
charactersToDrawCurrentDialog = ""; // string of characters that should be drawn from the current dialog
charactersToDraw = ""; // string of characters that should be drawn
charactersDrawn = 0; // number of characters in the current dialog that should be drawn
previousCharactersDrawn = ""; // characters from previous dialogs that still needs to be drawn
startOfDialog = true; // is thie the start of the dialog row?
newDialog = false; // is there more dialog after this?
endOfDialog = false; // is it the end of the dialog tree?
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Format dialog string
if (startOfDialog == true &amp;&amp; write == true) 
{
    //reset newDialog
    newDialog = false;
    
    dialog = DialogManager.dialogMap[? dialogID];
    
    nextDialogID = string_rtrim(string_extract(dialog, "&gt;&gt;&gt;", 1));
    dialog = string_extract(dialog, "&gt;&gt;&gt;", 0);
    
    // format string after need
    if (string_pos("/c", dialog) != 0)
    {
        newDialog = true;
        dialog = string_replace(dialog, "/c", "#");   
    }
    
    if (string_pos("/s", dialog) != 0)
    {
        newDialog = true;
        endOfDialog = true;
        dialog = string_replace(dialog, "/s", "");
    }
    
    if (string_pos("/e", dialog) != 0)
    {
        endOfDialog = true;
        dialog = string_replace(dialog, "/e", "");
    }
    
    dialogLength = string_length(dialog);
    
    startOfDialog = false;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Decide characters to draw
if (write == true) 
{
    // if typewriter is false, we want to display the whole message right away
    if (!typewriter)
    {
        charactersToDrawCurrentDialog = dialog;
        charactersToDraw = previousCharactersDrawn + dialog;
        charactersDrawn = dialogLength + 1;
    }
    
    // if there's still characters left to draw
    if (floor(charactersDrawn) &lt;= dialogLength) 
    {
        // copy all characters that should be drawn this step
        charactersToDrawCurrentDialog = string_copy(dialog, 
                                                    0, 
                                                    charactersDrawn);
    
        // if there is a text sound and if a new character will be written                                       
        if(textSound != -1 &amp;&amp;
            typewriter &amp;&amp;
            charactersDrawn &lt; floor(charactersDrawn + (1 / textSpeed)))
        {
            audio_play_sound(textSound, 10, false);
        }
                                                    
        charactersDrawn += 1 / textSpeed;
        charactersToDraw = previousCharactersDrawn + charactersToDrawCurrentDialog;
    }
    else
    {
        // fail-safe
        charactersToDrawCurrentDialog = dialog;
        charactersToDraw = previousCharactersDrawn + dialog;
        charactersDrawn = dialogLength + 1;
        
        // if we are at the end of the dialog
        if (newDialog)
        {
            // update variables necessary for reading a new dialog
            dialogID = nextDialogID;
            previousCharactersDrawn += charactersToDrawCurrentDialog;
            
            // reset variables necessary for reading a new dialog
            charactersToDrawCurrentDialog = "";
            startOfDialog = true;
            charactersDrawn = 0;
        }
        if (endOfDialog)
        {
            write = false;
            var dialogBoxArrow = instance_create(
                                x + sprite_get_width(spr_dialogbox) - floor((sprite_get_width(spr_dialogboxarrow) * 1.5)), 
                                y + sprite_get_height(spr_dialogbox) - floor((sprite_get_height(spr_dialogboxarrow) * 1.5)), 
                                obj_dialogboxarrow);
            
            dialogBoxArrow.depth = depth - 1;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw dialog box with dialog
draw_self();
draw_set_font(font);
draw_set_color(color);
draw_set_alpha(1);
draw_text_ext
(
    x + font_get_size(font), 
    y + font_get_size(font) / 1.8, 
    charactersToDraw, 
    font_get_size(font) * 2, 
    sprite_get_width(spr_dialogbox) - font_get_size(font) * 2
);
                
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="90">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Advance dialog
if (write)
{
    charactersToDraw = previousCharactersDrawn + dialog;
    charactersDrawn = dialogLength;
}
else if (newDialog &amp;&amp; endOfDialog &amp;&amp; !write)
{
    previousCharactersDrawn = "";
    charactersToDraw = "";
    endOfDialog = false;
    write = true;
}
else if (endOfDialog &amp;&amp; !write)
{
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="88">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Skip dialog
textSpeed /= 2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="88">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Normal text speed
textSpeed *= 2
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
